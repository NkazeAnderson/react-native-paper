"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8524],{34230:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>v,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=o(87462),a=(o(67294),o(3905)),i=o(50214),r=(o(47582),o(58764),o(29518));const l={title:"BottomNavigation.Bar"},s=void 0,p={unversionedId:"components/BottomNavigation/BottomNavigationBar",id:"components/BottomNavigation/BottomNavigationBar",title:"BottomNavigation.Bar",description:"A navigation bar which can easily be integrated with React Navigation's Bottom Tabs Navigator.",source:"@site/docs/components/BottomNavigation/BottomNavigationBar.mdx",sourceDirName:"components/BottomNavigation",slug:"/components/BottomNavigation/BottomNavigationBar",permalink:"/react-native-paper/docs/components/BottomNavigation/BottomNavigationBar",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/BottomNavigation/BottomNavigationBar.tsx",tags:[],version:"current",frontMatter:{title:"BottomNavigation.Bar"},sidebar:"components",previous:{title:"BottomNavigation",permalink:"/react-native-paper/docs/components/BottomNavigation/"},next:{title:"Button",permalink:"/react-native-paper/docs/components/Button/"}},v={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"shifting",id:"shifting",level:3},{value:"labeled",id:"labeled",level:3},{value:"compact",id:"compact",level:3},{value:"navigationState (required)",id:"navigationstate-required",level:3},{value:"renderIcon",id:"rendericon",level:3},{value:"renderLabel",id:"renderlabel",level:3},{value:"renderTouchable",id:"rendertouchable",level:3},{value:"getAccessibilityLabel",id:"getaccessibilitylabel",level:3},{value:"getBadge",id:"getbadge",level:3},{value:"getColor",id:"getcolor",level:3},{value:"getLabelText",id:"getlabeltext",level:3},{value:"getTestID",id:"gettestid",level:3},{value:"onTabPress (required)",id:"ontabpress-required",level:3},{value:"onTabLongPress",id:"ontablongpress",level:3},{value:"activeColor",id:"activecolor",level:3},{value:"inactiveColor",id:"inactivecolor",level:3},{value:"animationEasing",id:"animationeasing",level:3},{value:"keyboardHidesNavigationBar",id:"keyboardhidesnavigationbar",level:3},{value:"safeAreaInsets",id:"safeareainsets",level:3},{value:"labelMaxFontSizeMultiplier",id:"labelmaxfontsizemultiplier",level:3},{value:"style",id:"style",level:3},{value:"activeIndicatorStyle",id:"activeindicatorstyle",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3}],d={toc:m};function c(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,n.Z)({},d,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A navigation bar which can easily be integrated with ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/bottom-tab-navigator/"},"React Navigation's Bottom Tabs Navigator"),"."),(0,a.kt)(r.Z,{screenshotData:"screenshots/bottom-navigation-tabs.jpg",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { CommonActions } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Text, BottomNavigation } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function MyComponent() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n      tabBar={({ navigation, state, descriptors, insets }) => (\n        <BottomNavigation.Bar\n          navigationState={state}\n         safeAreaInsets={insets}\n          onTabPress={({ route, preventDefault }) => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (event.defaultPrevented) {\n              preventDefault();\n            } else {\n             navigation.dispatch({\n                ...CommonActions.navigate(route.name, route.params),\n                target: state.key,\n              });\n            }\n          }}\n          renderIcon={({ route, focused, color }) => {\n            const { options } = descriptors[route.key];\n            if (options.tabBarIcon) {\n              return options.tabBarIcon({ focused, color, size: 24 });\n            }\n\n            return null;\n          }}\n          getLabelText={({ route }) => {\n            const { options } = descriptors[route.key];\n            const label =\n              options.tabBarLabel !== undefined\n                ? options.tabBarLabel\n                : options.title !== undefined\n                ? options.title\n                : route.title;\n\n            return label;\n          }}\n        />\n      )}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          tabBarLabel: 'Home',\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"home\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarLabel: 'Settings',\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"cog\" size={size} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nfunction HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Settings!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("span",null),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"shifting"},"shifting")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"shifting",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"labeled"},"labeled")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"labeled",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"compact"},"compact")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"compact",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"navigationstate-required"},"navigationState (required)")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"navigationState",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"rendericon"},"renderIcon")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderIcon",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"renderlabel"},"renderLabel")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderLabel",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"rendertouchable"},"renderTouchable")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"renderTouchable",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"getaccessibilitylabel"},"getAccessibilityLabel")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getAccessibilityLabel",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"getbadge"},"getBadge")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getBadge",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"getcolor"},"getColor")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getColor",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"getlabeltext"},"getLabelText")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getLabelText",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"gettestid"},"getTestID")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"getTestID",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"ontabpress-required"},"onTabPress (required)")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"onTabPress",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"ontablongpress"},"onTabLongPress")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"onTabLongPress",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"activecolor"},"activeColor")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"activeColor",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"inactivecolor"},"inactiveColor")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"inactiveColor",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"animationeasing"},"animationEasing")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"animationEasing",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"keyboardhidesnavigationbar"},"keyboardHidesNavigationBar")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"keyboardHidesNavigationBar",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"safeareainsets"},"safeAreaInsets")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"safeAreaInsets",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"labelmaxfontsizemultiplier"},"labelMaxFontSizeMultiplier")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"labelMaxFontSizeMultiplier",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"style"},"style")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"style",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"activeindicatorstyle"},"activeIndicatorStyle")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"activeIndicatorStyle",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"theme"},"theme")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"theme",mdxType:"PropTable"}),(0,a.kt)("div",null,(0,a.kt)("h3",{id:"testid"},"testID")),(0,a.kt)(i.Z,{componentLink:"BottomNavigation/BottomNavigationBar",prop:"testID",mdxType:"PropTable"}),(0,a.kt)("span",null),(0,a.kt)("span",null),(0,a.kt)("span",null))}c.isMDXComponent=!0}}]);