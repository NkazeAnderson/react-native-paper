"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[625],{94053:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>g,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var n=o(87462),l=(o(67294),o(3905)),r=o(50214),u=(o(47582),o(58764),o(29518));const a={title:"ToggleButton.Row"},g=void 0,p={unversionedId:"components/ToggleButton/ToggleButtonRow",id:"components/ToggleButton/ToggleButtonRow",title:"ToggleButton.Row",description:"Toggle button row renders a group of toggle buttons in a row.",source:"@site/docs/components/ToggleButton/ToggleButtonRow.mdx",sourceDirName:"components/ToggleButton",slug:"/components/ToggleButton/ToggleButtonRow",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonRow",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/ToggleButton/ToggleButtonRow.tsx",tags:[],version:"current",frontMatter:{title:"ToggleButton.Row"},sidebar:"components",previous:{title:"ToggleButton.Group",permalink:"/react-native-paper/docs/components/ToggleButton/ToggleButtonGroup"},next:{title:"Tooltip",permalink:"/react-native-paper/docs/components/Tooltip/"}},i={},s=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"onValueChange (required)",id:"onvaluechange-required",level:3},{value:"value (required)",id:"value-required",level:3},{value:"children (required)",id:"children-required",level:3},{value:"style",id:"style",level:3}],c={toc:s};function d(e){let{components:t,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Toggle button row renders a group of toggle buttons in a row."),(0,l.kt)(u.Z,{screenshotData:"screenshots/toggle-button-row.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { ToggleButton } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState(\'left\');\n\n  return (\n    <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n      <ToggleButton icon="format-align-left" value="left" />\n      <ToggleButton icon="format-align-right" value="right" />\n    </ToggleButton.Row>\n  );\n};\n\nexport default MyComponent;\n\n')),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("span",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"onvaluechange-required"},"onValueChange (required)")),(0,l.kt)(r.Z,{componentLink:"ToggleButton/ToggleButtonRow",prop:"onValueChange",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"value-required"},"value (required)")),(0,l.kt)(r.Z,{componentLink:"ToggleButton/ToggleButtonRow",prop:"value",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"children-required"},"children (required)")),(0,l.kt)(r.Z,{componentLink:"ToggleButton/ToggleButtonRow",prop:"children",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"style"},"style")),(0,l.kt)(r.Z,{componentLink:"ToggleButton/ToggleButtonRow",prop:"style",mdxType:"PropTable"}),(0,l.kt)("span",null),(0,l.kt)("span",null),(0,l.kt)("span",null))}d.isMDXComponent=!0}}]);