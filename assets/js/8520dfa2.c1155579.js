"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[230],{52146:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>x});var p=n(87462),o=(n(67294),n(3905)),i=n(50214),l=(n(47582),n(58764),n(29518));const a={title:"TextInput.Affix"},r=void 0,s={unversionedId:"components/TextInput/TextInputAffix",id:"components/TextInput/TextInputAffix",title:"TextInput.Affix",description:"A component to render a leading / trailing text in the TextInput",source:"@site/docs/components/TextInput/TextInputAffix.mdx",sourceDirName:"components/TextInput",slug:"/components/TextInput/TextInputAffix",permalink:"/react-native-paper/docs/components/TextInput/TextInputAffix",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/TextInput/Adornment/TextInputAffix.tsx",tags:[],version:"current",frontMatter:{title:"TextInput.Affix"},sidebar:"components",previous:{title:"TextInput",permalink:"/react-native-paper/docs/components/TextInput/"},next:{title:"TextInput.Icon",permalink:"/react-native-paper/docs/components/TextInput/TextInputIcon"}},u={},x=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"text (required)",id:"text-required",level:3},{value:"onLayout",id:"onlayout",level:3},{value:"onPress",id:"onpress",level:3},{value:"accessibilityLabel",id:"accessibilitylabel",level:3},{value:"textStyle",id:"textstyle",level:3},{value:"theme",id:"theme",level:3}],c={toc:x};function d(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,p.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A component to render a leading / trailing text in the TextInput"),(0,o.kt)(l.Z,{screenshotData:"screenshots/textinput-outline.affix.png",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import * as React from \'react\';\nimport { TextInput } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState(\'\');\n\n  return (\n    <TextInput\n      mode="outlined"\n      label="Outlined input"\n      placeholder="Type something"\n      right={<TextInput.Affix text="/100" />}\n    />\n  );\n};\n\nexport default MyComponent;\n')),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)("span",null),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"text-required"},"text (required)")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"text",mdxType:"PropTable"}),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"onlayout"},"onLayout")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"onLayout",mdxType:"PropTable"}),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"onpress"},"onPress")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"onPress",mdxType:"PropTable"}),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"accessibilitylabel"},"accessibilityLabel")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"accessibilityLabel",mdxType:"PropTable"}),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"textstyle"},"textStyle")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"textStyle",mdxType:"PropTable"}),(0,o.kt)("div",null,(0,o.kt)("h3",{id:"theme"},"theme")),(0,o.kt)(i.Z,{componentLink:"TextInput/Adornment/TextInputAffix",prop:"theme",mdxType:"PropTable"}),(0,o.kt)("span",null),(0,o.kt)("span",null),(0,o.kt)("span",null))}d.isMDXComponent=!0}}]);