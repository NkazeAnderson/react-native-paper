"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4337],{15692:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var n=t(87462),l=(t(67294),t(3905)),s=t(50214),r=(t(47582),t(58764),t(29518));const o={title:"DataTable"},i=void 0,p={unversionedId:"components/DataTable/DataTable",id:"components/DataTable/DataTable",title:"DataTable",description:"Data tables allow displaying sets of data.",source:"@site/docs/components/DataTable/DataTable.mdx",sourceDirName:"components/DataTable",slug:"/components/DataTable/",permalink:"/react-native-paper/docs/components/DataTable/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/DataTable/DataTable.tsx",tags:[],version:"current",frontMatter:{title:"DataTable"},sidebar:"components",previous:{title:"Chip",permalink:"/react-native-paper/docs/components/Chip/"},next:{title:"DataTable.Cell",permalink:"/react-native-paper/docs/components/DataTable/DataTableCell"}},c={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"children (required)",id:"children-required",level:3},{value:"style",id:"style",level:3}],b={toc:m};function u(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Data tables allow displaying sets of data."),(0,l.kt)(r.Z,{screenshotData:"screenshots/data-table-full-width.png",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { DataTable } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [page, setPage] = React.useState<number>(0);\n  const [numberOfItemsPerPageList] = React.useState([2, 3, 4]);\n  const [itemsPerPage, onItemsPerPageChange] = React.useState(\n    numberOfItemsPerPageList[0]\n  );\n\n  const [items] = React.useState([\n   {\n     key: 1,\n     name: 'Cupcake',\n     calories: 356,\n     fat: 16,\n   },\n   {\n     key: 2,\n     name: 'Eclair',\n     calories: 262,\n     fat: 16,\n   },\n   {\n     key: 3,\n     name: 'Frozen yogurt',\n     calories: 159,\n     fat: 6,\n   },\n   {\n     key: 4,\n     name: 'Gingerbread',\n     calories: 305,\n     fat: 3.7,\n   },\n  ]);\n\n  const from = page * itemsPerPage;\n  const to = Math.min((page + 1) * itemsPerPage, items.length);\n\n  React.useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>Dessert</DataTable.Title>\n        <DataTable.Title numeric>Calories</DataTable.Title>\n        <DataTable.Title numeric>Fat</DataTable.Title>\n      </DataTable.Header>\n\n      {items.slice(from, to).map((item) => (\n        <DataTable.Row key={item.key}>\n          <DataTable.Cell>{item.name}</DataTable.Cell>\n          <DataTable.Cell numeric>{item.calories}</DataTable.Cell>\n          <DataTable.Cell numeric>{item.fat}</DataTable.Cell>\n        </DataTable.Row>\n      ))}\n\n      <DataTable.Pagination\n        page={page}\n        numberOfPages={Math.ceil(items.length / itemsPerPage)}\n        onPageChange={(page) => setPage(page)}\n        label={`${from + 1}-${to} of ${items.length}`}\n        numberOfItemsPerPageList={numberOfItemsPerPageList}\n        numberOfItemsPerPage={itemsPerPage}\n        onItemsPerPageChange={onItemsPerPageChange}\n        showFastPaginationControls\n        selectPageDropdownLabel={'Rows per page'}\n      />\n    </DataTable>\n  );\n};\n\nexport default MyComponent;\n")),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("span",null),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"children-required"},"children (required)")),(0,l.kt)(s.Z,{componentLink:"DataTable/DataTable",prop:"children",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"style"},"style")),(0,l.kt)(s.Z,{componentLink:"DataTable/DataTable",prop:"style",mdxType:"PropTable"}),(0,l.kt)("span",null),(0,l.kt)("span",null),(0,l.kt)("span",null))}u.isMDXComponent=!0}}]);