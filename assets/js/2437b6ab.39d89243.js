"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6819],{50994:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>l,toc:()=>m});var o=i(87462),n=(i(67294),i(3905)),a=i(50214),r=(i(47582),i(58764)),c=i(29518);const p={title:"ActivityIndicator"},s=void 0,l={unversionedId:"components/ActivityIndicator",id:"components/ActivityIndicator",title:"ActivityIndicator",description:"Activity indicator is used to present progress of some activity in the app.",source:"@site/docs/components/ActivityIndicator.mdx",sourceDirName:"components",slug:"/components/ActivityIndicator",permalink:"/react-native-paper/docs/components/ActivityIndicator",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/ActivityIndicator.tsx",tags:[],version:"current",frontMatter:{title:"ActivityIndicator"},sidebar:"components",next:{title:"Appbar",permalink:"/react-native-paper/docs/components/Appbar/"}},d={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"animating",id:"animating",level:3},{value:"color",id:"color",level:3},{value:"size",id:"size",level:3},{value:"hidesWhenStopped",id:"hideswhenstopped",level:3},{value:"style",id:"style",level:3},{value:"theme",id:"theme",level:3},{value:"Theme colors",id:"theme-colors",level:2}],v={toc:m};function h(t){let{components:e,...i}=t;return(0,n.kt)("wrapper",(0,o.Z)({},v,i,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Activity indicator is used to present progress of some activity in the app.\nIt can be used as a drop-in for the ActivityIndicator shipped with React Native."),(0,n.kt)(c.Z,{screenshotData:"screenshots/activity-indicator.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { ActivityIndicator, MD2Colors } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <ActivityIndicator animating={true} color={MD2Colors.red800} />\n);\n\nexport default MyComponent;\n")),(0,n.kt)("h2",{id:"props"},"Props"),(0,n.kt)("span",null),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"animating"},"animating")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"animating",mdxType:"PropTable"}),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"color"},"color")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"color",mdxType:"PropTable"}),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"size"},"size")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"size",mdxType:"PropTable"}),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"hideswhenstopped"},"hidesWhenStopped")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"hidesWhenStopped",mdxType:"PropTable"}),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"style"},"style")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"style",mdxType:"PropTable"}),(0,n.kt)("div",null,(0,n.kt)("h3",{id:"theme"},"theme")),(0,n.kt)(a.Z,{componentLink:"ActivityIndicator",prop:"theme",mdxType:"PropTable"}),(0,n.kt)("span",null),(0,n.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,n.kt)(r.Z,{themeColorsData:{"-":{borderColor:"theme.colors.primary"}},componentName:"ActivityIndicator",mdxType:"ThemeColorsTable"}),(0,n.kt)("span",null))}h.isMDXComponent=!0}}]);