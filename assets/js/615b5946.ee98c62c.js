"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{87241:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var o=n(87462),i=(n(67294),n(3905)),a=n(50214),l=(n(47582),n(58764),n(29518));const s={title:"Switch"},c=void 0,p={unversionedId:"components/Switch/Switch",id:"components/Switch/Switch",title:"Switch",description:"Switch is a visual toggle between two mutually exclusive states \u2014 on and off.",source:"@site/docs/components/Switch/Switch.mdx",sourceDirName:"components/Switch",slug:"/components/Switch/",permalink:"/react-native-paper/docs/components/Switch/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Switch/Switch.tsx",tags:[],version:"current",frontMatter:{title:"Switch"},sidebar:"components",previous:{title:"Surface",permalink:"/react-native-paper/docs/components/Surface"},next:{title:"Text",permalink:"/react-native-paper/docs/components/Text/"}},r={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"disabled",id:"disabled",level:3},{value:"value",id:"value",level:3},{value:"color",id:"color",level:3},{value:"onValueChange",id:"onvaluechange",level:3},{value:"style",id:"style",level:3},{value:"theme",id:"theme",level:3}],h={toc:d};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Switch is a visual toggle between two mutually exclusive states \u2014 on and off."),(0,i.kt)(l.Z,{screenshotData:{"Android (enabled)":"screenshots/switch-enabled.android.png","Android (disabled)":"screenshots/switch-disabled.android.png","iOS (enabled)":"screenshots/switch-enabled.ios.png","iOS (disabled)":"screenshots/switch-disabled.ios.png"},baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { Switch } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n\n  const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n\n  return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n};\n\nexport default MyComponent;\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("span",null),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"disabled"},"disabled")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"disabled",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"value"},"value")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"value",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"color"},"color")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"color",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"onvaluechange"},"onValueChange")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"onValueChange",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"style"},"style")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"style",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"theme"},"theme")),(0,i.kt)(a.Z,{componentLink:"Switch/Switch",prop:"theme",mdxType:"PropTable"}),(0,i.kt)("span",null),(0,i.kt)("span",null),(0,i.kt)("span",null))}u.isMDXComponent=!0}}]);