"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3577],{88783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={toc:[{value:"Code of Conduct",id:"code-of-conduct",level:2},{value:"Our Development Process",id:"our-development-process",level:2},{value:"Development workflow",id:"development-workflow",level:3},{value:"Commit message convention",id:"commit-message-convention",level:3},{value:"Linting and tests",id:"linting-and-tests",level:3},{value:"Sending a pull request",id:"sending-a-pull-request",level:3},{value:"Running the example",id:"running-the-example",level:3},{value:"Working on documentation",id:"working-on-documentation",level:3},{value:"Publishing a release",id:"publishing-a-release",level:3},{value:"Reporting issues",id:"reporting-issues",level:2},{value:"License",id:"license",level:2}]};function r(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contributing-to-react-native-paper"},"Contributing to React Native Paper"),(0,i.kt)("h2",{id:"code-of-conduct"},"Code of Conduct"),(0,i.kt)("p",null,"We want this community to be friendly and respectful to each other. Please read ",(0,i.kt)("a",{parentName:"p",href:"https://callstack.com/code-of-conduct/?utm_source=github.com&utm_medium=referral&utm_campaign=react-native-paper&utm_term=code-of-conduct"},"the full text")," so that you can understand what actions will and will not be tolerated."),(0,i.kt)("h2",{id:"our-development-process"},"Our Development Process"),(0,i.kt)("p",null,"The core team works directly on GitHub and all work is public."),(0,i.kt)("h3",{id:"development-workflow"},"Development workflow"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Working on your first pull request?")," You can learn how from this ",(0,i.kt)("em",{parentName:"p"},"free")," series: ",(0,i.kt)("a",{parentName:"p",href:"https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github"},"How to Contribute to an Open Source Project on GitHub"),".")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Fork the repo and create your branch from ",(0,i.kt)("inlineCode",{parentName:"li"},"main")," (a guide on ",(0,i.kt)("a",{parentName:"li",href:"https://help.github.com/articles/fork-a-repo/"},"how to fork a repository"),")."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"yarn bootstrap")," on the root level, to setup the development environment."),(0,i.kt)("li",{parentName:"ol"},"Do the changes you want and test them out in the example app before sending a pull request.")),(0,i.kt)("h3",{id:"commit-message-convention"},"Commit message convention"),(0,i.kt)("p",null,"We follow the ",(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en"},"conventional commits specification")," for our commit messages:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fix"),": bug fixes, e.g. fix Button color on DarkTheme."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"feat"),": new features, e.g. add Snackbar component."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"refactor"),": code refactor, e.g. new folder structure for components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docs"),": changes into documentation, e.g. add usage example for Button."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test"),": adding or updating tests, eg unit, snapshot testing."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"chore"),": tooling changes, e.g. change circleci config."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BREAKING CHANGE"),": for changes that break existing usage, e.g. change API of a component.")),(0,i.kt)("p",null,"Our pre-commit hooks verify that your commit message matches this format when committing."),(0,i.kt)("h3",{id:"linting-and-tests"},"Linting and tests"),(0,i.kt)("p",null,"We use ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," for type checking, ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"prettier")," for linting and formatting the code, and ",(0,i.kt)("inlineCode",{parentName:"p"},"jest")," for testing. Our pre-commit hooks verify that the linter and tests pass when commiting. You can also run the following commands manually:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn typescript"),": type-check files with ",(0,i.kt)("inlineCode",{parentName:"li"},"tsc"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn lint"),": lint files with ",(0,i.kt)("inlineCode",{parentName:"li"},"eslint")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"prettier"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn test"),": run unit tests with ",(0,i.kt)("inlineCode",{parentName:"li"},"jest"),".")),(0,i.kt)("h3",{id:"sending-a-pull-request"},"Sending a pull request"),(0,i.kt)("p",null,"When you're sending a pull request:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Prefer small pull requests focused on one change."),(0,i.kt)("li",{parentName:"ul"},"Verify that ",(0,i.kt)("inlineCode",{parentName:"li"},"typescript"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"eslint")," and all tests are passing."),(0,i.kt)("li",{parentName:"ul"},"Preview the documentation to make sure it looks good."),(0,i.kt)("li",{parentName:"ul"},"Follow the pull request template when opening a pull request.")),(0,i.kt)("p",null,"When you're working on a component:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Follow the guidelines described in the ",(0,i.kt)("a",{parentName:"li",href:"https://material.io/guidelines/"},"official material design docs"),"."),(0,i.kt)("li",{parentName:"ul"},"Write a brief description of every prop when defining ",(0,i.kt)("inlineCode",{parentName:"li"},"type Props")," to aid with documentation."),(0,i.kt)("li",{parentName:"ul"},"Provide an example usage for the component (check other components to get a idea)."),(0,i.kt)("li",{parentName:"ul"},"Update the type definitions for Flow and TypeScript if you changed an API or added a component.")),(0,i.kt)("h3",{id:"running-the-example"},"Running the example"),(0,i.kt)("p",null,"The example app uses ",(0,i.kt)("a",{parentName:"p",href:"https://expo.dev/"},"Expo")," for the React Native example. You will need to install the Expo app for ",(0,i.kt)("a",{parentName:"p",href:"https://play.google.com/store/apps/details?id=host.exp.exponent"},"Android")," and ",(0,i.kt)("a",{parentName:"p",href:"https://itunes.apple.com/app/apple-store/id982107779"},"iOS")," to start developing."),(0,i.kt)("p",null,"After you're done, you can run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn example start")," in the project root (or ",(0,i.kt)("inlineCode",{parentName:"p"},"expo start")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"example/")," folder) and scan the QR code to launch it on your device."),(0,i.kt)("p",null,"To run the example on web, run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn example web")," in the project root."),(0,i.kt)("h3",{id:"working-on-documentation"},"Working on documentation"),(0,i.kt)("p",null,"The documentation is automatically generated from the ",(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," annotations in the components. You can add comments above the type annotations to add descriptions. To preview the generated documentation, run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn docs start")," in the project root."),(0,i.kt)("h3",{id:"publishing-a-release"},"Publishing a release"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/webpro/release-it"},"release-it")," to automate our release. If you have publish access to the NPM package, run the following from the main branch to publish a new release:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn release\n")),(0,i.kt)("p",null,"NOTE: You must have a ",(0,i.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN"),' environment variable available. You can create a GitHub access token with the "repo" access ',(0,i.kt)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"here"),"."),(0,i.kt)("h2",{id:"reporting-issues"},"Reporting issues"),(0,i.kt)("p",null,"You can report issues on our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/callstack/react-native-paper/issues"},"bug tracker"),". Please follow the issue template when opening an issue."),(0,i.kt)("h2",{id:"license"},"License"),(0,i.kt)("p",null,"By contributing to React Native Paper, you agree that your contributions will be licensed under its ",(0,i.kt)("strong",{parentName:"p"},"MIT")," license."))}r.isMDXComponent=!0;const l={title:"Contributing"},p=void 0,s={unversionedId:"guides/contributing",id:"guides/contributing",title:"Contributing",description:"",source:"@site/docs/guides/07-contributing.mdx",sourceDirName:"guides",slug:"/guides/contributing",permalink:"/react-native-paper/docs/guides/contributing",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/docs/docs/guides/07-contributing.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Contributing"},sidebar:"tutorialSidebar",previous:{title:"Recommended Libraries",permalink:"/react-native-paper/docs/guides/recommended-libraries"},next:{title:"Theming with React Navigation",permalink:"/react-native-paper/docs/guides/theming-with-react-navigation"}},u={},c=[],m={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(r,{mdxType:"Contributing"}))}d.isMDXComponent=!0}}]);