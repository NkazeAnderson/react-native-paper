"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5924],{73522:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>b,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var t=n(87462),l=(n(67294),n(3905)),a=n(50214),i=n(47582),c=n(58764),r=n(29518);const s={title:"IconButton"},p=void 0,d={unversionedId:"components/IconButton/IconButton",id:"components/IconButton/IconButton",title:"IconButton",description:"An icon button is a button which displays only an icon without a label.",source:"@site/docs/components/IconButton/IconButton.mdx",sourceDirName:"components/IconButton",slug:"/components/IconButton/",permalink:"/react-native-paper/docs/components/IconButton/",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/IconButton/IconButton.tsx",tags:[],version:"current",frontMatter:{title:"IconButton"},sidebar:"components",previous:{title:"Icon",permalink:"/react-native-paper/docs/components/Icon"},next:{title:"List.Accordion",permalink:"/react-native-paper/docs/components/List/ListAccordion"}},u={},m=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"TouchableRipple props",id:"touchableripple-props",level:3},{value:"icon (required)",id:"icon-required",level:3},{value:'mode  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"mode--available-in-v5x-with-theme-version-3",level:3},{value:'iconColor  <span class="badge badge-renamed "><span class="badge-text">Renamed from &#39;color&#39; to &#39;iconColor&#39; in v5.x</span></span>',id:"iconcolor--renamed-from-color-to-iconcolor-in-v5x",level:3},{value:"containerColor",id:"containercolor",level:3},{value:"rippleColor",id:"ripplecolor",level:3},{value:'selected  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"selected--available-in-v5x-with-theme-version-3",level:3},{value:"size",id:"size",level:3},{value:"disabled",id:"disabled",level:3},{value:"animated",id:"animated",level:3},{value:"accessibilityLabel",id:"accessibilitylabel",level:3},{value:"onPress",id:"onpress",level:3},{value:"style",id:"style",level:3},{value:"ref",id:"ref",level:3},{value:"testID",id:"testid",level:3},{value:"theme",id:"theme",level:3},{value:"loading",id:"loading",level:3},{value:"Theme colors",id:"theme-colors",level:2}],k={toc:m};function b(o){let{components:e,...n}=o;return(0,l.kt)("wrapper",(0,t.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"An icon button is a button which displays only an icon without a label."),(0,l.kt)(r.Z,{screenshotData:{default:"screenshots/icon-button-1.png",outlined:"screenshots/icon-button-4.png",contained:"screenshots/icon-button-2.png","contained-tonal":"screenshots/icon-button-3.png"},baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { IconButton, MD3Colors } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <IconButton\n    icon=\"camera\"\n    iconColor={MD3Colors.error50}\n    size={20}\n    onPress={() => console.log('Pressed')}\n  />\n);\n\nexport default MyComponent;\n")),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("h3",{id:"touchableripple-props"},"TouchableRipple props"),(0,l.kt)(i.Z,{name:"TouchableRipple props",link:"https://callstack.github.io/react-native-paper/docs/components/TouchableRipple",mdxType:"ExtendsLink"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"icon-required"},"icon (required)")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"icon",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"mode--available-in-v5x-with-theme-version-3"},"mode  ",(0,l.kt)("span",{class:"badge badge-supported "},(0,l.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"mode",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"iconcolor--renamed-from-color-to-iconcolor-in-v5x"},"iconColor  ",(0,l.kt)("span",{class:"badge badge-renamed "},(0,l.kt)("span",{class:"badge-text"},"Renamed from 'color' to 'iconColor' in v5.x")))),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"iconColor",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"containercolor"},"containerColor")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"containerColor",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"ripplecolor"},"rippleColor")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"rippleColor",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"selected--available-in-v5x-with-theme-version-3"},"selected  ",(0,l.kt)("span",{class:"badge badge-supported "},(0,l.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"selected",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"size"},"size")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"size",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"disabled"},"disabled")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"disabled",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"animated"},"animated")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"animated",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"accessibilitylabel"},"accessibilityLabel")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"accessibilityLabel",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"onpress"},"onPress")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"onPress",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"style"},"style")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"style",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"ref"},"ref")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"ref",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"testid"},"testID")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"testID",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"theme"},"theme")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"theme",mdxType:"PropTable"}),(0,l.kt)("div",null,(0,l.kt)("h3",{id:"loading"},"loading")),(0,l.kt)(a.Z,{componentLink:"IconButton/IconButton",prop:"loading",mdxType:"PropTable"}),(0,l.kt)("span",null),(0,l.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,l.kt)(c.Z,{themeColorsData:{selected:{default:{iconColor:"theme.colors.primary"},outlined:{backgroundColor:"theme.colors.inverseSurface",iconColor:"theme.colors.inverseOnSurface"},contained:{backgroundColor:"theme.colors.primary",iconColor:"theme.colors.onPrimary"},"contained-tonal":{backgroundColor:"theme.colors.secondaryContainer",iconColor:"theme.colors.onSecondaryContainer"}},unselected:{default:{iconColor:"theme.colors.onSurfaceVariant"},outlined:{iconColor:"theme.colors.onSurfaceVariant",borderColor:"theme.colors.outline"},contained:{backgroundColor:"theme.colors.surfaceVariant",iconColor:"theme.colors.primary"},"contained-tonal":{backgroundColor:"theme.colors.surfaceVariant",iconColor:"theme.colors.onSurfaceVariant"}},disabled:{default:{iconColor:"theme.colors.onSurfaceDisabled"},outlined:{backgroundColor:"theme.colors.surfaceDisabled",iconColor:"theme.colors.onSurfaceDisabled",borderColor:"theme.colors.surfaceDisabled"},contained:{backgroundColor:"theme.colors.surfaceDisabled",iconColor:"theme.colors.onSurfaceDisabled"},"contained-tonal":{backgroundColor:"theme.colors.surfaceDisabled",iconColor:"theme.colors.onSurfaceDisabled"}}},componentName:"IconButton",mdxType:"ThemeColorsTable"}),(0,l.kt)("span",null))}b.isMDXComponent=!0}}]);