"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6711],{55317:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>b,frontMatter:()=>r,metadata:()=>c,toc:()=>v});var t=n(87462),i=(n(67294),n(3905)),o=n(50214),l=(n(47582),n(58764)),s=n(29518);const r={title:"Snackbar"},p=void 0,c={unversionedId:"components/Snackbar",id:"components/Snackbar",title:"Snackbar",description:"Snackbars provide brief feedback about an operation through a message rendered at the bottom of the container in which it's wrapped.",source:"@site/docs/components/Snackbar.mdx",sourceDirName:"components",slug:"/components/Snackbar",permalink:"/react-native-paper/docs/components/Snackbar",draft:!1,editUrl:"https://github.com/callstack/react-native-paper/tree/main/src/components/Snackbar.tsx",tags:[],version:"current",frontMatter:{title:"Snackbar"},sidebar:"components",previous:{title:"SegmentedButtons",permalink:"/react-native-paper/docs/components/SegmentedButtons/"},next:{title:"Surface",permalink:"/react-native-paper/docs/components/Surface"}},d={},v=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"visible (required)",id:"visible-required",level:3},{value:"action",id:"action",level:3},{value:'icon  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"icon--available-in-v5x-with-theme-version-3",level:3},{value:'rippleColor  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"ripplecolor--available-in-v5x-with-theme-version-3",level:3},{value:'onIconPress  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"oniconpress--available-in-v5x-with-theme-version-3",level:3},{value:'iconAccessibilityLabel  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"iconaccessibilitylabel--available-in-v5x-with-theme-version-3",level:3},{value:"duration",id:"duration",level:3},{value:"onDismiss (required)",id:"ondismiss-required",level:3},{value:"children (required)",id:"children-required",level:3},{value:'elevation  <span class="badge badge-supported "><span class="badge-text">Available in v5.x with theme version 3</span></span>',id:"elevation--available-in-v5x-with-theme-version-3",level:3},{value:"maxFontSizeMultiplier",id:"maxfontsizemultiplier",level:3},{value:"wrapperStyle",id:"wrapperstyle",level:3},{value:"style",id:"style",level:3},{value:"ref",id:"ref",level:3},{value:"theme",id:"theme",level:3},{value:"testID",id:"testid",level:3},{value:"More Examples",id:"more-examples",level:2},{value:"Theme colors",id:"theme-colors",level:2}],k={toc:v};function b(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},k,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Snackbars provide brief feedback about an operation through a message rendered at the bottom of the container in which it's wrapped."),(0,i.kt)("p",null,"Note: To display it as a popup, regardless of the parent's position, wrap it with a ",(0,i.kt)("inlineCode",{parentName:"p"},"Portal"),' component \u2013 refer to the example in the "More Examples` section.'),(0,i.kt)(s.Z,{screenshotData:"screenshots/snackbar.gif",baseUrl:"/react-native-paper/",mdxType:"ScreenshotTabs"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Snackbar } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const onToggleSnackBar = () => setVisible(!visible);\n\n  const onDismissSnackBar = () => setVisible(false);\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n      <Snackbar\n        visible={visible}\n        onDismiss={onDismissSnackBar}\n        action={{\n          label: 'Undo',\n          onPress: () => {\n            // Do something\n          },\n        }}>\n        Hey there! I'm a Snackbar.\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n});\n\nexport default MyComponent;\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("span",null),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"visible-required"},"visible (required)")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"visible",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"action"},"action")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"action",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"icon--available-in-v5x-with-theme-version-3"},"icon  ",(0,i.kt)("span",{class:"badge badge-supported "},(0,i.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"icon",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"ripplecolor--available-in-v5x-with-theme-version-3"},"rippleColor  ",(0,i.kt)("span",{class:"badge badge-supported "},(0,i.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"rippleColor",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"oniconpress--available-in-v5x-with-theme-version-3"},"onIconPress  ",(0,i.kt)("span",{class:"badge badge-supported "},(0,i.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"onIconPress",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"iconaccessibilitylabel--available-in-v5x-with-theme-version-3"},"iconAccessibilityLabel  ",(0,i.kt)("span",{class:"badge badge-supported "},(0,i.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"iconAccessibilityLabel",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"duration"},"duration")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"duration",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"ondismiss-required"},"onDismiss (required)")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"onDismiss",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"children-required"},"children (required)")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"children",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"elevation--available-in-v5x-with-theme-version-3"},"elevation  ",(0,i.kt)("span",{class:"badge badge-supported "},(0,i.kt)("span",{class:"badge-text"},"Available in v5.x with theme version 3")))),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"elevation",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"maxfontsizemultiplier"},"maxFontSizeMultiplier")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"maxFontSizeMultiplier",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"wrapperstyle"},"wrapperStyle")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"wrapperStyle",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"style"},"style")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"style",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"ref"},"ref")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"ref",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"theme"},"theme")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"theme",mdxType:"PropTable"}),(0,i.kt)("div",null,(0,i.kt)("h3",{id:"testid"},"testID")),(0,i.kt)(o.Z,{componentLink:"Snackbar",prop:"testID",mdxType:"PropTable"}),(0,i.kt)("h2",{id:"more-examples"},"More Examples"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Toggle to grab more examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{key:"Snackbar rendered regardless of the parent positioning"},(0,i.kt)("a",{href:"https://snack.expo.dev/@react-native-paper/more-examples---snackbar-rendered-regardless-of-the-parent-positioning"},"Snackbar rendered regardless of the parent positioning")))),(0,i.kt)("h2",{id:"theme-colors"},"Theme colors"),(0,i.kt)(l.Z,{themeColorsData:{"-":{iconColor:"theme.colors.inverseOnSurface"}},componentName:"Snackbar",mdxType:"ThemeColorsTable"}),(0,i.kt)("span",null))}b.isMDXComponent=!0}}]);